from django.shortcuts import render,redirect
from django.http import HttpResponse
from django.views import generic
from django.contrib.auth.forms import UserCreationForm
from apkupload.models import ApkDetection
from user.views import registerPage,loginPage
from django.contrib.auth.decorators import login_required
import json
import os

import sys

import apkupload.detect as detect
import uuid
#导入存算法模块的路径


templateIndex = 'apkupload/index.html'

def register(request):
    registerPage(request)

def login(request):
    loginPage(request)
#

def index(request):
    if request.method == "POST":
        
        try:
            pp = upload_file(request)
        except:
            return render(request, templateIndex)
        else:
            if pp == 200:
                return redirect('apkinfo')
            else:
                return redirect('login')
    return render(request,templateIndex)


@login_required(login_url='login')
def upload_file(request):
    if request.method == "POST":
        apkfile = request.FILES.get("apkfile", None)
        dir_path = os.path.dirname(os.path.abspath('__file__'))

        uploadFilePath = dir_path + "/uploadFile/" + str(
            uuid.uuid1()) + "-" + apkfile.name + "/"

        if not apkfile:
            return HttpResponse("no file!")
        try:
            os.makedirs(uploadFilePath)
        except:
            request.session._session['apkpath'] = uploadFilePath + apkfile.name
            return 200
        else:
            destination = open(os.path.join(uploadFilePath, apkfile.name), "wb+")
            for chunk in apkfile.chunks():
                destination.write(chunk)
            destination.close()
            # 上传文件成功之后就可以调用检测模块
            request.session._session['apkpath'] = uploadFilePath + apkfile.name
            request.session['apkpath'] = uploadFilePath + apkfile.name
            return 200


